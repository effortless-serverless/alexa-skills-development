AWSTemplateFormatVersion: 2010-09-09
Conditions:
  IsCorsDefined:
    Fn::Not:
    - Fn::Equals:
      - Ref: CorsOrigin
      - ''
Outputs:
  ApiUrl:
    Description: The URL of the API Gateway you invoke with a GET request to retrieve
      all of your items in the DynamoDB Table.
    Value:
      Fn::Sub: https://${PizzaApi}.execute-api.${AWS::Region}.amazonaws.com/prod/pizzas
  DynamoDBTableArn:
    Description: The ARN of your DynamoDB Table
    Value:
      Fn::GetAtt:
      - PizzaTable
      - Arn
  DynamoDBTableStreamArn:
    Description: The ARN of your DynamoDB Table Stream
    Value:
      Fn::GetAtt:
      - PizzaTable
      - StreamArn
Parameters:
  CorsOrigin:
    Default: '"*"'
    Description: (Optional) Cross-origin resource sharing (CORS) Origin. You can specify
      a single origin, all "*" or leave empty and no CORS will be applied.
    MaxLength: 250
    Type: String
  TableName:
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: Required parameter. Must be characters and/or underscores.
      No numbers allowed.
    Default: pizzas
    Description: (Required) The name of the new DynamoDB table you want to create
      and save to. Minimum 3 characters
    MaxLength: 50
    MinLength: 3
    Type: String
Resources:
  GetAllPizzasLambda:
    Properties:
      CodeUri: s3://pizzas-api/ed0bd578f16745f79ecda3e1b2fcfd12
      Environment:
        Variables:
          CORS_ORIGIN:
            Ref: CorsOrigin
          IS_CORS: IsCorsDefined
          TABLE_NAME:
            Ref: TableName
      Events:
        Api:
          Properties:
            Method: GET
            Path: /pizzas
            RestApiId:
              Ref: PizzaApi
          Type: Api
      Handler: index.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TableName
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  PizzaApi:
    Properties:
      DefinitionBody:
        info:
          title:
            Ref: AWS::StackName
        paths:
          /pizzas:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetAllPizzasLambda.Arn}/invocations
        swagger: 2.0
      StageName: prod
    Type: AWS::Serverless::Api
  PizzaTable:
    Properties:
      AttributeDefinitions:
      - AttributeName:
          Fn::Sub: pizzaId
        AttributeType: S
      KeySchema:
      - AttributeName:
          Fn::Sub: pizzaId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName:
        Ref: TableName
    Type: AWS::DynamoDB::Table
Transform: AWS::Serverless-2016-10-31
